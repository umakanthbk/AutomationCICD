<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-06T04:06:06Z" name="Suite" finished-at="2025-01-06T04:06:43Z" duration-ms="37068">
    <groups>
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" name="submitOrder" class="rahulshettyacademy.tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.LoginErrorValidation()[pri:0, instance:rahulshettyacademy.tests.ErrorValidationsTest@24111ef1]" name="LoginErrorValidation" class="rahulshettyacademy.tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test started-at="2025-01-06T04:06:06Z" name="Error Validations Test" finished-at="2025-01-06T04:06:39Z" duration-ms="32813">
      <class name="rahulshettyacademy.tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.ErrorValidationsTest@24111ef1]" started-at="2025-01-06T04:06:06Z" name="launchApplication" finished-at="2025-01-06T04:06:20Z" duration-ms="13405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:rahulshettyacademy.tests.ErrorValidationsTest@24111ef1]" started-at="2025-01-06T04:06:20Z" name="LoginErrorValidation" finished-at="2025-01-06T04:06:23Z" duration-ms="2921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.ErrorValidationsTest@24111ef1]" started-at="2025-01-06T04:06:23Z" name="tearDown" finished-at="2025-01-06T04:06:26Z" duration-ms="3275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.ErrorValidationsTest@24111ef1]" started-at="2025-01-06T04:06:26Z" name="launchApplication" finished-at="2025-01-06T04:06:34Z" duration-ms="7623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:rahulshettyacademy.tests.ErrorValidationsTest@24111ef1]" started-at="2025-01-06T04:06:34Z" name="ProductErrorValidation" finished-at="2025-01-06T04:06:37Z" duration-ms="3333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.ErrorValidationsTest@24111ef1]" started-at="2025-01-06T04:06:37Z" name="tearDown" finished-at="2025-01-06T04:06:39Z" duration-ms="2185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test -->
    <test started-at="2025-01-06T04:06:06Z" name="Submit Order Test" finished-at="2025-01-06T04:06:43Z" duration-ms="37068">
      <class name="rahulshettyacademy.tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" started-at="2025-01-06T04:06:07Z" name="launchApplication" finished-at="2025-01-06T04:06:22Z" duration-ms="14464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" started-at="2025-01-06T04:06:22Z" name="submitOrder" data-provider="getData" finished-at="2025-01-06T04:06:28Z" duration-ms="6508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password@123, product=IPHONE 13 PRO, email=bkumakanth@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" started-at="2025-01-06T04:06:28Z" name="tearDown" finished-at="2025-01-06T04:06:30Z" duration-ms="1650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" started-at="2025-01-06T04:06:30Z" name="launchApplication" finished-at="2025-01-06T04:06:39Z" duration-ms="8783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" started-at="2025-01-06T04:06:39Z" name="submitOrder" data-provider="getData" finished-at="2025-01-06T04:06:42Z" duration-ms="3037" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ADIDAS ORIGINAL, email=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button _ngcontent-auy-c34="" class="btn w-10 rounded" style="float: right;">...</button> is not clickable at point (469, 496). Other element would receive the click: <img _ngcontent-auy-c34="" class="card-img-top" src="https://rahulshettyacademy.com/api/ecom/uploads/productImage_1735025439009.jpg">
  (Session info: chrome=131.0.6778.140)
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [324fe307535870b3e35958316e1cb366, clickElement {id=f.46797330DA5B3AFCAF3B39E79E8B437B.d.8731D95CB6FD710FA5C0C1563D8C28BB.e.73}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58680}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58680/devtoo..., se:cdpVersion: 131.0.6778.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (324fe307535870b3e35958316e1cb366)] -> css selector: .mb-3]] -> css selector: .card-body button:last-of-type]
Session ID: 324fe307535870b3e35958316e1cb366]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button _ngcontent-auy-c34="" class="btn w-10 rounded" style="float: right;">...</button> is not clickable at point (469, 496). Other element would receive the click: <img _ngcontent-auy-c34="" class="card-img-top" src="https://rahulshettyacademy.com/api/ecom/uploads/productImage_1735025439009.jpg">
  (Session info: chrome=131.0.6778.140)
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [324fe307535870b3e35958316e1cb366, clickElement {id=f.46797330DA5B3AFCAF3B39E79E8B437B.d.8731D95CB6FD710FA5C0C1563D8C28BB.e.73}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58680}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58680/devtoo..., se:cdpVersion: 131.0.6778.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (324fe307535870b3e35958316e1cb366)] -> css selector: .mb-3]] -> css selector: .card-body button:last-of-type]
Session ID: 324fe307535870b3e35958316e1cb366
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at rahulshettyacademy.pageobjects.ProductCatalogue.addProductToCart(ProductCatalogue.java:52)
at rahulshettyacademy.tests.SubmitOrderTest.submitOrder(SubmitOrderTest.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" started-at="2025-01-06T04:06:42Z" name="tearDown" finished-at="2025-01-06T04:06:43Z" duration-ms="1267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f]" started-at="2025-01-06T04:06:43Z" name="OrderHistoryTest" finished-at="2025-01-06T04:06:43Z" depends-on-methods="rahulshettyacademy.tests.SubmitOrderTest.submitOrder" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SubmitOrderTest.OrderHistoryTest()[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SubmitOrderTest.OrderHistoryTest()[pri:0, instance:rahulshettyacademy.tests.SubmitOrderTest@6eb2384f] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
      </class> <!-- rahulshettyacademy.tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
